{
  "api": {
    "name": "FullScreenNotificationPlugin",
    "slug": "fullscreennotificationplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "cancelNotification",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Cancel the current notification",
        "complexTypes": [],
        "slug": "cancelnotification"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'launch', listenerFunc: MessageListener) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'launch'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "MessageListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [
          {
            "name": "param",
            "text": "eventName"
          },
          {
            "name": "param",
            "text": "listenerFunc"
          }
        ],
        "docs": "Add a listener when the fullscreen intent launches the app.\nYou can navigate here to the destination page.\nThe parameter gives you the information if an action button has been clicked.",
        "complexTypes": [
          "PluginListenerHandle",
          "MessageListener"
        ],
        "slug": "addlistenerlaunch"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Removes all listeners.",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "MessageListener",
      "slug": "messagelistener",
      "docs": "",
      "types": [
        {
          "text": "(response: any): void",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}